<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_20) on Wed Oct 05 21:07:40 EDT 2011 -->
<TITLE>
BvhNodeUtil
</TITLE>

<META NAME="date" CONTENT="2011-10-05">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="BvhNodeUtil";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/BvhNodeUtil.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?bvh/util/BvhNodeUtil.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="BvhNodeUtil.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
bvh.util</FONT>
<BR>
Class BvhNodeUtil</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../resources/inherit.gif" ALT="extended by "><B>bvh.util.BvhNodeUtil</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>BvhNodeUtil</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../bvh/util/BvhNodeUtil.html#BvhNodeUtil()">BvhNodeUtil</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../bvh/util/BvhNodeUtil.html#getBestSahSplit(bvh.BvhNode, java.util.Set, java.util.Set)">getBestSahSplit</A></B>(<A HREF="../../bvh/BvhNode.html" title="class in bvh">BvhNode</A>&nbsp;bvhNode,
                java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;leftTriangleSubset,
                java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;rightTriangleSubset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A utility method to get the best point to split the <A HREF="../../bvh/BvhNode.html" title="class in bvh"><CODE>BvhNode</CODE></A>, and
 therefore its <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;<A HREF="../../enums/Plane.html" title="enum in enums">Plane</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../bvh/util/BvhNodeUtil.html#getPlaneOfSplit(bvh.BvhNode)">getPlaneOfSplit</A></B>(<A HREF="../../bvh/BvhNode.html" title="class in bvh">BvhNode</A>&nbsp;bvhNode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Utility method to determine on which <A HREF="../../enums/Plane.html" title="enum in enums"><CODE>Plane</CODE></A> the <A HREF="../../bvh/BvhNode.html" title="class in bvh"><CODE>BvhNode</CODE></A>
 needs to be split</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;java.lang.Float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../bvh/util/BvhNodeUtil.html#getSA(voxel.Voxel)">getSA</A></B>(<A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;voxel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A convenience method to get the surface area of a <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;java.lang.Float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../bvh/util/BvhNodeUtil.html#getSahCost(voxel.Voxel, java.lang.Integer, voxel.Voxel, java.lang.Integer, voxel.Voxel)">getSahCost</A></B>(<A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;leftVoxel,
           java.lang.Integer&nbsp;leftVoxelTriangles,
           <A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;rightVoxel,
           java.lang.Integer&nbsp;rightVoxelTriangles,
           <A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;parentVoxel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A method for getting the Surface Area Heuristic of a <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>'s
 children <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>s and the number of <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s those
 children <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>s contain</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;javax.vecmath.Vector3f</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../bvh/util/BvhNodeUtil.html#getTriangleCentroid(triangle.Triangle)">getTriangleCentroid</A></B>(<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&nbsp;triangle)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method for getting the centroid of a <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A> as a
 <CODE>Vector3f</CODE></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;java.lang.Float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../bvh/util/BvhNodeUtil.html#getVoxelFraction(voxel.Voxel, voxel.Voxel)">getVoxelFraction</A></B>(<A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;voxel,
                 <A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;parentVoxel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A method for getting the fraction of the surface area of a <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>
 compaired to its parent's</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../bvh/util/BvhNodeUtil.html#splitTriangles(java.util.Set, java.lang.Float, enums.Plane, java.util.Set, java.util.Set)">splitTriangles</A></B>(java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;trianglesToSplit,
               java.lang.Float&nbsp;valueOfSplit,
               <A HREF="../../enums/Plane.html" title="enum in enums">Plane</A>&nbsp;planeOfSplit,
               java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;leftTriangles,
               java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;rightTriangles)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Separates a set of <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s into left and right <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>
 subsets</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="BvhNodeUtil()"><!-- --></A><H3>
BvhNodeUtil</H3>
<PRE>
public <B>BvhNodeUtil</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getSahCost(voxel.Voxel, java.lang.Integer, voxel.Voxel, java.lang.Integer, voxel.Voxel)"><!-- --></A><H3>
getSahCost</H3>
<PRE>
private static java.lang.Float <B>getSahCost</B>(<A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;leftVoxel,
                                          java.lang.Integer&nbsp;leftVoxelTriangles,
                                          <A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;rightVoxel,
                                          java.lang.Integer&nbsp;rightVoxelTriangles,
                                          <A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;parentVoxel)</PRE>
<DL>
<DD>A method for getting the Surface Area Heuristic of a <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>'s
 children <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>s and the number of <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s those
 children <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>s contain
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>leftVoxel</CODE> - The <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A> representing the left child<DD><CODE>leftVoxelTriangles</CODE> - The <CODE>Integer</CODE> representing the number of <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s
        within the left <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A><DD><CODE>rightVoxel</CODE> - The <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A> representing the right child<DD><CODE>rightVoxelTriangles</CODE> - The <CODE>Integer</CODE> representing the number of <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s
        within the right <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A><DD><CODE>parentVoxel</CODE> - The parent <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A> containing both the left and right child
        <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>s
<DT><B>Returns:</B><DD>A <CODE>Float</CODE> representing the SAH cost</DL>
</DD>
</DL>
<HR>

<A NAME="getVoxelFraction(voxel.Voxel, voxel.Voxel)"><!-- --></A><H3>
getVoxelFraction</H3>
<PRE>
private static java.lang.Float <B>getVoxelFraction</B>(<A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;voxel,
                                                <A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;parentVoxel)</PRE>
<DL>
<DD>A method for getting the fraction of the surface area of a <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>
 compaired to its parent's
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>voxel</CODE> - The <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A> being compared<DD><CODE>parentVoxel</CODE> - The parent <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A> of the one being compared
<DT><B>Returns:</B><DD>A <CODE>Float</CODE> representing the fraction of surface area of one
         <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A> to the other</DL>
</DD>
</DL>
<HR>

<A NAME="getSA(voxel.Voxel)"><!-- --></A><H3>
getSA</H3>
<PRE>
private static java.lang.Float <B>getSA</B>(<A HREF="../../voxel/Voxel.html" title="class in voxel">Voxel</A>&nbsp;voxel)</PRE>
<DL>
<DD>A convenience method to get the surface area of a <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>voxel</CODE> - The <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A> having its surface area calculated
<DT><B>Returns:</B><DD>A <CODE>Float</CODE> representing the surface area of the
         <A HREF="../../voxel/Voxel.html" title="class in voxel"><CODE>Voxel</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTriangleCentroid(triangle.Triangle)"><!-- --></A><H3>
getTriangleCentroid</H3>
<PRE>
private static javax.vecmath.Vector3f <B>getTriangleCentroid</B>(<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&nbsp;triangle)
                                                   throws java.lang.Exception</PRE>
<DL>
<DD>Method for getting the centroid of a <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A> as a
 <CODE>Vector3f</CODE>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>triangle</CODE> - The <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A> of which the centroid is being calculated
<DT><B>Returns:</B><DD>A <CODE>Vector3f</CODE> representing the centroid of the
         <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>
<DT><B>Throws:</B>
<DD><CODE>java.lang.Exception</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getBestSahSplit(bvh.BvhNode, java.util.Set, java.util.Set)"><!-- --></A><H3>
getBestSahSplit</H3>
<PRE>
public static void <B>getBestSahSplit</B>(<A HREF="../../bvh/BvhNode.html" title="class in bvh">BvhNode</A>&nbsp;bvhNode,
                                   java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;leftTriangleSubset,
                                   java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;rightTriangleSubset)
                            throws java.lang.Exception</PRE>
<DL>
<DD>A utility method to get the best point to split the <A HREF="../../bvh/BvhNode.html" title="class in bvh"><CODE>BvhNode</CODE></A>, and
 therefore its <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bvhnode</CODE> - The <A HREF="../../bvh/BvhNode.html" title="class in bvh"><CODE>BvhNode</CODE></A> being split<DD><CODE>leftTriangleSubset</CODE> - The <CODE>Set</CODE> of <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s for the left side of the
        <A HREF="../../bvh/BvhNode.html" title="class in bvh"><CODE>BvhNode</CODE></A><DD><CODE>rightTriangleSubset</CODE> - The <CODE>Set</CODE> of <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s for the right side of the
        <A HREF="../../bvh/BvhNode.html" title="class in bvh"><CODE>BvhNode</CODE></A>
<DT><B>Throws:</B>
<DD><CODE>java.lang.Exception</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="splitTriangles(java.util.Set, java.lang.Float, enums.Plane, java.util.Set, java.util.Set)"><!-- --></A><H3>
splitTriangles</H3>
<PRE>
private static void <B>splitTriangles</B>(java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;trianglesToSplit,
                                   java.lang.Float&nbsp;valueOfSplit,
                                   <A HREF="../../enums/Plane.html" title="enum in enums">Plane</A>&nbsp;planeOfSplit,
                                   java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;leftTriangles,
                                   java.util.Set&lt;<A HREF="../../triangle/Triangle.html" title="class in triangle">Triangle</A>&gt;&nbsp;rightTriangles)
                            throws java.lang.Exception</PRE>
<DL>
<DD>Separates a set of <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s into left and right <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>
 subsets
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>trianglesToSplit</CODE> - The <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s being split<DD><CODE>valueOfSplit</CODE> - The <CODE>Float</CODE> where the <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s need to split<DD><CODE>planeOfSplit</CODE> - The <A HREF="../../enums/Plane.html" title="enum in enums"><CODE>Plane</CODE></A> where the split occurs<DD><CODE>leftTriangles</CODE> - The <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s to the left of the split value<DD><CODE>rightTriangles</CODE> - The <A HREF="../../triangle/Triangle.html" title="class in triangle"><CODE>Triangle</CODE></A>s to the right of the split value
<DT><B>Throws:</B>
<DD><CODE>java.lang.Exception</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getPlaneOfSplit(bvh.BvhNode)"><!-- --></A><H3>
getPlaneOfSplit</H3>
<PRE>
private static <A HREF="../../enums/Plane.html" title="enum in enums">Plane</A> <B>getPlaneOfSplit</B>(<A HREF="../../bvh/BvhNode.html" title="class in bvh">BvhNode</A>&nbsp;bvhNode)</PRE>
<DL>
<DD>Utility method to determine on which <A HREF="../../enums/Plane.html" title="enum in enums"><CODE>Plane</CODE></A> the <A HREF="../../bvh/BvhNode.html" title="class in bvh"><CODE>BvhNode</CODE></A>
 needs to be split
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bvhNode</CODE> - The <A HREF="../../bvh/BvhNode.html" title="class in bvh"><CODE>BvhNode</CODE></A> being split
<DT><B>Returns:</B><DD>A <A HREF="../../enums/Plane.html" title="enum in enums"><CODE>Plane</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/BvhNodeUtil.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?bvh/util/BvhNodeUtil.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="BvhNodeUtil.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
